(function(){"use strict";function loadScript(t,e){const a=document.createElement("script");a.src=t,a.onload=e,a.onerror=()=>{e()},document.body.appendChild(a)}function checkLibrariesAvailability(){window.gsap&&window.ScrollTrigger&&window.SplitType&&initializeAnimations()}function initializeAnimations(){kinekt_from_to(),kinekt_text_effect(),kinekt_image_effects()}function validate_input_number_css_unit(t){void 0===t&&(t="0px");const e=["px","pt","em","rem","ex","ch","vw","vh","%"],a=t.match(/^(-?\d*\.?\d+)([a-zA-Z%]*)$/);if(a){const t=parseFloat(a[1]),i=a[2].toLowerCase();if(e.includes(i)||""===i)return`${t}${i}`}return null}function filter_unique_objects(t){const e={},a=[];for(let i=0;i<t.length;i++){const n=t[i],_=Object.keys(n)[0];_ in e?a[a.length-1]=n:(e[_]=n,a.push(n))}return a}function animatable_properties(array_data,original_data,object){let from_to=[],animate_from=new Object,animate_to=new Object;if(array_data){const default_zero=["x","y","skewX","skewY","rotation"],ap_array=array_data;ap_array.forEach((item=>{if("x"===item.property||"y"===item.property){let pos_start=""===item.value_start?0:item.value_start,pos_end=""===item.value_end?0:item.value_end;if(null===validate_input_number_css_unit(item.value_start))if(pos_start)try{animate_from[item.property]=pos_start?eval(item.value_start):0}catch(t){alert("Expression is invalid! The error says: "+t.message)}else animate_from[item.property]=0;else animate_from[item.property]=pos_start?item.value_start:0;if(null===validate_input_number_css_unit(item.value_end))if(pos_end)try{animate_to[item.property]=pos_end?eval(item.value_end):0}catch(t){alert("Expression is invalid! The error says: "+t.message)}else animate_to[item.property]=0;else animate_to[item.property]=pos_end?item.value_end:0}else if("backgroundColor"===item.property||"color"===item.property){let t=window.getComputedStyle(object),e="";e="backgroundColor"===item.property?""===t.backgroundColor?"transparent":t.backgroundColor:""===t.color?"transparent":t.color,void 0===item.value_start_color?animate_from[item.property]=e:void 0===item.value_start_color.rgb?animate_from[item.property]=void 0!==item.value_start_color.raw?item.value_start_color.raw:item.value_start_color.hex:animate_from[item.property]=void 0!==item.value_start_color.raw?item.value_start_color.raw:item.value_start_color.rgb,void 0===item.value_end_color?animate_to[item.property]=e:void 0===item.value_end_color.rgb?animate_to[item.property]=void 0!==item.value_end_color.raw?item.value_end_color.raw:item.value_end_color.hex:animate_to[item.property]=void 0!==item.value_end_color.raw?item.value_end_color.raw:item.value_end_color.rgb}else{let t=1;default_zero.includes(item.property)&&(t=0),animate_from[item.property]=""===item.value_start?t:item.value_start,animate_to[item.property]=""===item.value_end?t:item.value_end}})),animate_to.duration=original_data.animation_type_duration,animate_to.ease=original_data.animation_type_easing,animate_to.delay=original_data.animation_type_delay,animate_to.stagger=parseFloat(original_data.animation_type_stagger)}return from_to.from=animate_from,from_to.to=animate_to,from_to}function get_animation_triggers(original_data){let triggers=new Object,has_custom_start_end=original_data.custom_start_end;if(""!==original_data.animation_type_trigger&&(triggers.the_trigger_start=null!==document.querySelector(original_data.animation_type_trigger)?document.querySelector(original_data.animation_type_trigger):""),""!==original_data.animation_type_end_trigger&&(triggers.the_trigger_end=null!==document.querySelector(original_data.animation_type_end_trigger)?document.querySelector(original_data.animation_type_end_trigger):""),has_custom_start_end){try{triggers.the_start=eval(original_data.animation_type_custom_start)}catch(t){alert("Expression is invalid! The error says: "+t.message)}try{triggers.the_end=eval(original_data.animation_type_custom_end)}catch(t){alert("Expression is invalid! The error says: "+t.message)}}else triggers.the_start=eval((()=>original_data.animation_type_start+"+="+original_data.animation_type_offset+" "+original_data.animation_type_meet)),triggers.the_end=eval((()=>original_data.animation_type_end+"+="+original_data.animation_type_offset_end+" "+original_data.animation_type_meet_end));return triggers}function kinekt_from_to(){const t=gsap.utils.toArray(".kinekt-fade-from-to");t&&t.forEach((t=>{const e=t.getAttribute("data-kinekt");if(!e||""===e)return;const a=JSON.parse(atob(e)),i={AP:"ap_all",A1:"animation_type_trigger",A2:"animation_type_end_trigger",B:"animation_type_start",B1:"animation_type_end",C:"animation_type_meet",C1:"animation_type_meet_end",D:"animation_type_offset",D1:"animation_type_offset_end",E:"animation_type_custom_start",F:"animation_type_custom_end",G:"custom_start_end",I2:"animation_type_rot_origin",J:"animation_type_stagger",M:"animation_type_use_scrub",M1:"animation_type_scrub",P:"animation_type_pin",P1:"animation_type_pin_spacing",U:"animation_type_duration",V:"animation_type_delay",X:"animation_type_easing",Y:"toggle_actions",Z:"markers",W:"animate_children"},n={};for(const t in a)n[i[t]]=a[t];let _=[],o=new Object,r=new Object;n.ap_all&&(_=animatable_properties(n.ap_all,n,t),o=_.from,r=_.to);let s=0;s=!!n.animation_type_use_scrub&&(parseFloat(n.animation_type_scrub)<0?0:parseFloat(n.animation_type_scrub));let p=n.animation_type_pin?t:"undefined";const m=get_animation_triggers(n);let l={};if(n.animate_children){const t=parseFloat(n.animation_type_stagger);t>0&&(l={stagger:t})}const g=gsap.timeline({scrollTrigger:{trigger:void 0!==m.the_trigger_start?m.the_trigger_start:t,start:m.the_start,endTrigger:void 0!==typeof m.the_trigger_end?m.the_trigger_end:"",end:m.the_end,toggleActions:n.toggle_actions,scrub:s,pin:p,pinSpacing:Boolean(n.animation_type_pin_spacing),markers:n.markers},defaults:l}),c=t.querySelectorAll(':scope > [class*="brxe-"]'),y=n.animate_children?c:t;let d=void 0!==o.opacity?parseFloat(o.opacity):1;y===t?gsap.set(t,{opacity:d,transformOrigin:n.animation_type_rot_origin}):gsap.set(t,{opacity:1,transformOrigin:n.animation_type_rot_origin}),g.fromTo(y,o,r)}))}function kinekt_text_effect(){let t=gsap.utils.toArray(".kinekt-text-effect");t&&t.forEach((t=>{const e=t.getAttribute("data-kinekt");if(!e||""===e)return;const a=JSON.parse(atob(e)),i={AP:"ap_all",A1:"animation_type_trigger",A2:"animation_type_end_trigger",B:"animation_type_start",B1:"animation_type_end",C:"animation_type_meet",C1:"animation_type_meet_end",D:"animation_type_offset",D1:"animation_type_offset_end",E:"animation_type_custom_start",F:"animation_type_custom_end",G:"custom_start_end",I2:"animation_type_rot_origin",J:"animation_type_stagger",K:"animation_type_text_split_type",K1:"animation_type_text_split_overflow",M:"animation_type_use_scrub",M1:"animation_type_scrub",P:"animation_type_pin",P1:"animation_type_pin_spacing",U:"animation_type_duration",V:"animation_type_delay",X:"animation_type_easing",Y:"toggle_actions",Z:"markers"},n={};for(const t in a)n[i[t]]=a[t];let _=[],o=new Object,r=new Object;n.ap_all&&(_=animatable_properties(n.ap_all,n,t),o=_.from,r=_.to);let s=0;s=!!n.animation_type_use_scrub&&(parseFloat(n.animation_type_scrub)<0?0:parseFloat(n.animation_type_scrub));let p="";const m=""===n.animation_type_text_split_type?"words":n.animation_type_text_split_type,l=new SplitType(t,{types:"lines, words"});switch(m){case"lines":p=l.lines;break;case"words":p=l.words;break}let g=n.animation_type_pin?t:"undefined";const c=get_animation_triggers(n),y=gsap.timeline({scrollTrigger:{trigger:void 0!==c.the_trigger_start?c.the_trigger_start:t,start:c.the_start,endTrigger:void 0!==typeof c.the_trigger_end?c.the_trigger_end:"",end:c.the_end,toggleActions:n.toggle_actions,scrub:s,pin:g,pinSpacing:Boolean(n.animation_type_pin_spacing),invalidateOnRefresh:!0,markers:n.markers}});n.animation_type_text_split_overflow&&gsap.set(l.lines,{overflow:"hidden"}),gsap.set(p,{transformOrigin:n.animation_type_rot_origin}),gsap.set(t,{opacity:1}),y.fromTo(p,o,r)}))}function kinekt_image_effects(){let t=gsap.utils.toArray(".kinekt-image-effects");t&&t.forEach((t=>{const e=t.querySelector("img"),a=t.getAttribute("data-kinekt");if(!a||""===a)return;const i=JSON.parse(atob(a)),n={A1:"animation_type_trigger",A2:"animation_type_end_trigger",B:"animation_type_start",B1:"animation_type_end",C:"animation_type_meet",C1:"animation_type_meet_end",D:"animation_type_offset",D1:"animation_type_offset_end",E:"animation_type_custom_start",F:"animation_type_custom_end",G:"custom_start_end",M:"animation_type_use_scrub",M1:"animation_type_scrub",N:"animation_type_img_effects",N1:"animation_type_img_effect_reveal",N2:"animation_type_img_effect_reveal_dir_offset",N3:"animation_type_img_effect_reveal_speed_offset",N4:"animation_type_img_effect_cover_color",N5:"animation_type_img_effect_reveal_fadein",O:"animation_type_img_effect_parallax_vol",O1:"animation_type_img_effect_parallax_dir",O2:"animation_type_img_effect_parallax_pan",P:"animation_type_pin",P1:"animation_type_pin_spacing",U:"animation_type_duration",V:"animation_type_delay",X:"animation_type_easing",Y:"toggle_actions",Z:"markers"},_={};for(const t in i)_[n[t]]=i[t];const o=_.animation_type_img_effects;let r=0;r=!!_.animation_type_use_scrub&&(parseFloat(_.animation_type_scrub)<0?0:parseFloat(_.animation_type_scrub));let s=_.animation_type_pin?t:"undefined";const p=get_animation_triggers(_);if("reveal"===o){let a="",i="",n="";const o=_.animation_type_img_effect_reveal;let m=0,l=0;const g=_.animation_type_img_effect_reveal_dir_offset;let c=1;switch(Boolean(_.animation_type_img_effect_reveal_fadein)&&(c=0),o){case"reveal-from-left":a="polygon(0% 0%, 0% 0%, 0% 100%, 0% 100%)",i="polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)",n="-",m=g;break;case"reveal-from-right":a="polygon(100% 0%, 100% 0%, 100% 100%, 100% 100%)",i="polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)",n="",m=g;break;case"reveal-from-top":a="polygon(0% 0%, 100% 0%, 100% 0%, 0% 0%)",i="polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)",n="-",l=g;break;case"reveal-from-bottom":a="polygon(0% 100%, 100% 100%, 100% 100%, 0% 100%)",i="polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)",n="",l=g;break}const y=gsap.timeline({scrollTrigger:{trigger:void 0!==p.the_trigger_start?p.the_trigger_start:t,start:p.the_start,endTrigger:void 0!==typeof p.the_trigger_end?p.the_trigger_end:"",end:p.the_end,toggleActions:_.toggle_actions,scrub:r,pin:s,pinSpacing:Boolean(_.animation_type_pin_spacing),invalidateOnRefresh:!0,markers:_.markers}});let d="";d=void 0===_.animation_type_img_effect_cover_color.rgb?void 0!==_.animation_type_img_effect_cover_color.raw?_.animation_type_img_effect_cover_color.raw:_.animation_type_img_effect_cover_color.hex:void 0!==_.animation_type_img_effect_cover_color.raw?_.animation_type_img_effect_cover_color.raw:_.animation_type_img_effect_cover_color.rgb,gsap.set(t,{opacity:1,backgroundColor:d}),y.fromTo(t,{opacity:c,x:n+m,y:n+l,clipPath:a},{opacity:1,x:0,y:0,clipPath:i,duration:_.animation_type_duration,ease:_.animation_type_easing,delay:_.animation_type_delay}).fromTo(e,{opacity:c,clipPath:a},{opacity:1,clipPath:i,duration:_.animation_type_duration,ease:_.animation_type_easing,delay:_.animation_type_delay},"-="+_.animation_type_img_effect_reveal_speed_offset)}else if("parallax"===o){const a=parseInt(_.animation_type_img_effect_parallax_vol),i=_.animation_type_img_effect_parallax_dir,n=_.animation_type_img_effect_parallax_pan;let o=parseInt(e.clientHeight),m=o,l=parseInt(e.clientWidth),g=l,c=0;switch(i){case"vertical":c=o*a/100,o+=c;break;case"horizontal":c=l*a/100,l+=c;break}const y=gsap.timeline({scrollTrigger:{trigger:void 0!==p.the_trigger_start?p.the_trigger_start:t,start:p.the_start,endTrigger:void 0!==typeof p.the_trigger_end?p.the_trigger_end:"",end:p.the_end,toggleActions:_.toggle_actions,scrub:r,pin:s,pinSpacing:Boolean(_.animation_type_pin_spacing),invalidateOnRefresh:!0,markers:_.markers}});let d=-1*(o-m),f=0,u=0,v=-1*(l-g);"vertical"===i&&"positive"===n&&(d=0,f=-1*(o-m)),"horizontal"===i&&"positive"===n&&(u=-1*(l-g),v=0),gsap.set(t,{opacity:1,width:g,height:m}),gsap.set(e,{height:o,width:l,maxWidth:"vertical"===i?"100%":"unset",x:u,y:d}),y.to(e,{x:()=>v,y:()=>f,duration:_.animation_type_duration,ease:_.animation_type_easing,delay:_.animation_type_delay})}}))}document.addEventListener("DOMContentLoaded",(()=>{let t=0;function e(){t++,3===t&&checkLibrariesAvailability()}loadScript("https://cdnjs.cloudflare.com/ajax/libs/gsap/3.9.1/gsap.min.js",(()=>{e(),loadScript("https://cdnjs.cloudflare.com/ajax/libs/gsap/3.9.1/ScrollTrigger.min.js",(()=>{e()}))})),loadScript("https://unpkg.com/split-type",(()=>{e()}))}))})();